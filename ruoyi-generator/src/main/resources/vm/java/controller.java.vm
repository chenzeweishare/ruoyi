package ${packageName}.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.escm.information.model.${ClassName};
import com.escm.information.param.${ClassName}Param;
import com.escm.information.service.${ClassName}Service;
import com.regent.rbp.infrastructure.constants.BaseApiConstant;
import com.regent.rbp.infrastructure.constants.ResponseCode;
import com.regent.rbp.infrastructure.contoller.BaseRestController;
import com.regent.rbp.infrastructure.request.ListRequest;
import com.regent.rbp.infrastructure.request.ModelRequest;
import com.regent.rbp.infrastructure.request.PageRequest;
import com.regent.rbp.infrastructure.response.BaseResponse;
import com.regent.rbp.infrastructure.response.ModelResponse;
import com.regent.rbp.infrastructure.response.PageResponse;
import com.regent.rbp.infrastructure.util.ResponseUtil;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

/**
 * ${functionName}Controller
 *
 * @author ${author}
 * @date ${datetime}
 */

@RestController
@RequestMapping(ApiConstants.INFORMATION+ "/" + ApiConstants.${CLASSNAME})
@Api(tags = "${functionName}")
public class ${ClassName}Controller extends BaseRestController {

    @Autowired
    private ${ClassName}Service ${className}Service;


    @PostMapping(BaseApiConstant.COMMON_PAGE)
    @ApiOperation(value = "分页查询列表数据")
    public PageResponse<${ClassName}> searchPageData(@RequestBody PageRequest<${ClassName}Param> param ) {
        return ${className}Service.searchPageData(param.getPage(), param.getPageSize(),param.getData());
    }


    @PostMapping(BaseApiConstant.COMMON_LIST)
    @ApiOperation(value = "查询列表数据")
    public ListResponse<${ClassName}> searchData(@RequestBody ModelRequest<String> req) {
        return ResponseUtil.success(${className}Service.searchListData(req.getData()));
    }

    @GetMapping("/{id}")
    @ApiOperation(value = "详情")
    public ModelResponse<${ClassName}> item(@PathVariable(name = "id") Long id) {
        return ResponseUtil.success(${className}Service.select${ClassName}ById(id));
    }


    @PostMapping(BaseApiConstant.COMMON_CREATE)
    @ApiOperation(value = "新增")
    public BaseResponse create(@RequestBody ModelRequest<${ClassName}> ${className}) {
        Long id = ${className}Service.insert${ClassName}(${className}.getData());
        if(null == id) {
            return ResponseUtil.error(ResponseCode.INTERNAL_DB_ERROR, "保存出错，请联系管理员！", null);
        }
        return ResponseUtil.success(id);
    }



    @PutMapping(BaseApiConstant.COMMON_UPDATE)
    @ApiOperation(value = "修改")
    public BaseResponse update(@RequestBody ModelRequest<${ClassName}> ${className}) {
        Long id = ${className}Service.update${ClassName}(${className}.getData());
        if(null == id) {
            return ResponseUtil.error(ResponseCode.INTERNAL_DB_ERROR, "保存出错，请联系管理员！", null);
        }
        return ResponseUtil.success(id);
    }


    @PostMapping(BaseApiConstant.COMMON_REMOVE_BATCH)
    @ApiOperation(value = "批量删除")
    public BaseResponse removeBatch(@RequestBody ListRequest<Long> req) {
        ${className}Service.delete${ClassName}ByIds(req.getData());
        return ResponseUtil.success();
    }

}

