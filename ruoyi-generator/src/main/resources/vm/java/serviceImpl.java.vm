package ${packageName}.service.impl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.regent.rbp.common.service.impl.BaseServiceImpl;
import com.regent.rbp.information.dao.${ClassName}Dao;
import com.regent.rbp.information.model.${ClassName};
import com.regent.rbp.information.param.${ClassName}Param;
import com.regent.rbp.information.service.${ClassName}Service;
import com.regent.rbp.infrastructure.response.PageResponse;

/**
 * ${functionName}Service业务层处理
 * 
 * @author ${author}
 * @date ${datetime}
 */
@Service
public class ${ClassName}ServiceImpl extends BaseServiceImpl<${ClassName}Dao, ${ClassName}> implements ${ClassName}Service {

    @Autowired
    private ${ClassName}Dao ${className}Dao;
    
    /**
     * @Description: 分页查询数据
     * 
     * @param  queryReq  查询实体
     * @param  page  页数
     * @param  pageSize  每页数量
     * @return ${functionName}
     */
    public PageResponse<${ClassName}> searchPageData (int page,int pageSize,${ClassName}Param queryParam){
    	
    	Page<${ClassName}> pageModel = new Page<${ClassName}>(page,pageSize);
        IPage<${ClassName}> pages = ${className}Dao.searchPageData(pageModel, queryParam);
        PageResponse<${ClassName}> pageData = new PageResponse<${ClassName}>(pages.getTotal(), pageSize, pages.getRecords());
		return pageData;
    }

    /**
     * @Description:  根据ID查询${functionName}
     * 
     * @param ${pkColumn.javaField} ${functionName}ID
     * @return ${functionName}
     */
    @Override
    public ${ClassName} select${ClassName}ById(${pkColumn.javaType} ${pkColumn.javaField}) {
        return null;
    }
    
    /**
     * @Description: 新增${functionName}
     * 
     * @param ${className} ${functionName}
     * @return 结果
     */
    @Override
    public Long insert${ClassName}(${ClassName} ${className}) {
		return 0L;
    }

    /**
     * @Description: 修改${functionName}
     * 
     * @param ${className} ${functionName}
     * @return 结果
     */
    @Override
    public Long update${ClassName}(${ClassName} ${className}) {
     
     return 0L;
    }

    /**
     * @Description:  删除${functionName}信息
     * 
     * @param ${pkColumn.javaField} ${functionName}ID
     * @return 结果
     */
    @Override
    public int delete${ClassName}ById(${pkColumn.javaType} ${pkColumn.javaField}) {
        
        return 0;
    }
    /**
     * @Description:  批量删除
     * 
     * @return 结果
     */
    @Override
    public int delete${ClassName}ByIds(List<Long> ids){
       
        return 0;
    }
}
