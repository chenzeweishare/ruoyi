package ${packageName}.service;

import ${packageName}.model.${ClassName};
import java.util.List;
import ${packageName}.resp.${ClassName}Resp;
import ${packageName}.req.${ClassName}Req;
import com.regent.bp.common.service.BaseService;
import com.regent.bp.infrastructure.response.PageResponse;
import com.regent.bp.infrastructure.model.BatchData;
#if($table.tree)
import com.ruoyi.common.core.domain.Ztree;
#end

/**
 * @Description: ${functionName}Service接口
 * 
 * @author ${author}
 * @date ${datetime}
 */
public interface ${ClassName}Service extends BaseService<${ClassName}> {

    /**
     * @Description: 查询${functionName}
     * 
     * @param ${pkColumn.javaField} ${functionName}ID
     * @return ${functionName}
     */
    public ${ClassName} select${ClassName}ById(${pkColumn.javaType} ${pkColumn.javaField});

    /**
     * @Description: 查询${functionName}列表
     * 
     * @param ${className} ${functionName}
     * @return ${functionName}集合
     */
    public List<${ClassName}> select${ClassName}List(${ClassName} ${className});

    /**
     * @Description: 查询${functionName}列表
     * 
     * 
     * @return ${functionName}聚合数据
     */
    public List<${ClassName}Resp> select${ClassName}ListResp();
    
   /**
     * @Description: 分页查询数据
     * @param  queryReq  查询实体
     * @param  page  页数
     * @param  pageSize  每页数量
     * @return ${functionName}
     */
    public PageResponse<${ClassName}Resp> searchPage${ClassName}(int page, int pageSize,${ClassName}Req queryReq);
    
    /**
     * @Description:  新增${functionName}
     * 
     * @param ${className} ${functionName}
     * @return 结果
     */
    public int insert${ClassName}(${ClassName} ${className});

    /**
     * @Description: 修改${functionName}
     * 
     * @param ${className} ${functionName}
     * @return 结果
     */
    public int update${ClassName}(${ClassName} ${className});


    /**
     * @Description: 删除${functionName}信息
     * 
     * @param ${pkColumn.javaField} ${functionName}ID
     * @return 结果
     */
    public int delete${ClassName}ById(${pkColumn.javaType} ${pkColumn.javaField});
   
    /**
     * @Description: 批量删除
     * 
     * @param ${pkColumn.javaField} ${functionName}ID
     * @return 结果
     */
    public BatchData delete${ClassName}ByIds(List<String> ids);
#if($table.tree)

    /**
     * @Description: 查询${functionName}树列表
     * 
     * @return 所有${functionName}信息
     */
    public List<Ztree> select${ClassName}Tree();
#end
}
